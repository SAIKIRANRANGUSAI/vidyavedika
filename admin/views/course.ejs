<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Home Management | VidyaVedika</title>
  <link rel="shortcut icon" type="image/x-icon" href="/images/favicon.png" />
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
  <link rel="stylesheet" href="/admin/static/css/admin.css">

  <style>
    body {
      font-family: Arial, sans-serif;
      background-color: #f4f7f9;
    }

    .container {
      max-width: 1200px;
      margin: 20px auto;
      padding: 20px;
      background-color: #ffffff;
      border-radius: 8px;
      box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    }

    .section-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 20px;
    }

    .section-title {
      color: #333;
      font-size: 2em;
    }

    .section-subtitle {
      color: #555;
      font-size: 1.5em;
    }

    .form-group {
      margin-bottom: 1.5rem;
    }

    .form-label {
      font-weight: bold;
      display: block;
      margin-bottom: 0.5rem;
    }

    .form-input,
    .form-textarea {
      width: 100%;
      padding: 10px;
      border: 1px solid #ccc;
      border-radius: 4px;
      box-sizing: border-box;
    }

    .form-textarea {
      resize: vertical;
    }

    .btn {
      padding: 10px 20px;
      border-radius: 4px;
      text-decoration: none;
      color: #fff;
      border: none;
      cursor: pointer;
    }

    .btn-primary {
      background-color: #007bff;
    }

    .btn-danger {
      background-color: #dc3545;
    }

    .btn-sm {
      padding: 5px 10px;
      font-size: 0.8em;
    }

    .data-table {
      width: 100%;
      border-collapse: collapse;
      margin-top: 20px;
    }

    .data-table th,
    .data-table td {
      padding: 12px;
      border: 1px solid #e9ecef;
      text-align: left;
    }

    .data-table th {
      background-color: #f8f9fa;
    }

    .table-image {
      width: 50px;
      height: 50px;
      object-fit: cover;
      border-radius: 50%;
    }

    .table-actions .btn {
      margin-right: 5px;
    }

    .modal-body .form-group {
      margin-bottom: 1rem;
    }
  </style>
  <style>
    :root {
      --primary: #4361ee;
      --primary-dark: #3a56d4;
      --secondary: #7209b7;
      --success: #06d6a0;
      --warning: #ffd166;
      --danger: #ef476f;
      --dark: #1e293b;
      --light: #f8fafc;
      --gray: #94a3b8;
      --sidebar-width: 260px;
      --header-height: 70px;
      --border-radius: 12px;
      --transition: all 0.3s ease;
    }

    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
      font-family: 'Poppins', 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    body {
      display: flex;
      background: #f1f5f9;
      color: var(--dark);
      height: 100vh;
      overflow: hidden;
    }

    .sidebar {
      width: var(--sidebar-width);
      background: var(--dark);
      color: white;
      height: 100%;
      display: flex;
      flex-direction: column;
      transition: var(--transition);
      z-index: 1000;
      box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);
    }

    .sidebar.active {
      transform: translateX(0);
    }

    .sidebar-header {
      padding: 24px 20px;
      display: flex;
      align-items: center;
      border-bottom: 1px solid rgba(255, 255, 255, 0.1);
    }

    .sidebar-header img {
      width: 40px;
      height: 40px;
      border-radius: 8px;
      margin-right: 12px;
      object-fit: cover;
    }

    .sidebar-header h2 {
      font-size: 18px;
      font-weight: 600;
    }

    .sidebar-menu {
      padding: 20px 0;
      flex: 1;
      overflow-y: auto;
    }

    .menu-label {
      padding: 10px 20px;
      font-size: 12px;
      text-transform: uppercase;
      color: var(--gray);
      letter-spacing: 1px;
    }

    .menu-item {
      display: flex;
      align-items: center;
      padding: 14px 20px;
      color: white;
      text-decoration: none;
      transition: var(--transition);
      position: relative;
    }

    .menu-item:hover,
    .menu-item.active {
      background: rgba(255, 255, 255, 0.1);
    }

    .menu-item.active::before {
      content: '';
      position: absolute;
      left: 0;
      top: 0;
      height: 100%;
      width: 4px;
      background: var(--primary);
    }

    .menu-item i {
      width: 24px;
      margin-right: 12px;
      font-size: 18px;
    }

    .menu-item span {
      flex: 1;
    }

    .menu-badge {
      background: var(--primary);
      color: white;
      padding: 2px 8px;
      border-radius: 20px;
      font-size: 12px;
    }

    .sidebar-footer {
      padding: 16px 20px;
      border-top: 1px solid rgba(255, 255, 255, 0.1);
    }

    .user-info {
      display: flex;
      align-items: center;
    }

    .user-info img {
      width: 40px;
      height: 40px;
      border-radius: 50%;
      margin-right: 12px;
      object-fit: cover;
    }

    .user-details h4 {
      font-size: 14px;
      margin-bottom: 4px;
    }

    .user-details span {
      font-size: 12px;
      color: var(--gray);
    }

    .main-content {
      flex: 1;
      display: flex;
      flex-direction: column;
      height: 100%;
      overflow: hidden;
    }

    .header {
      height: var(--header-height);
      background: white;
      display: flex;
      align-items: center;
      justify-content: space-between;
      padding: 0 24px;
      box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
      z-index: 100;
    }

    .header-left {
      display: flex;
      align-items: center;
    }

    .toggle-sidebar {
      margin-right: 16px;
      cursor: pointer;
      font-size: 20px;
      color: var(--dark);
    }

    .search-box {
      position: relative;
    }

    .search-box input {
      padding: 10px 16px 10px 40px;
      border-radius: 20px;
      border: 1px solid #e2e8f0;
      width: 300px;
      font-size: 14px;
      outline: none;
      transition: var(--transition);
    }

    .search-box input:focus {
      border-color: var(--primary);
      box-shadow: 0 0 0 3px rgba(67, 97, 238, 0.15);
    }

    .search-box i {
      position: absolute;
      left: 16px;
      top: 50%;
      transform: translateY(-50%);
      color: var(--gray);
    }

    .header-right {
      display: flex;
      align-items: center;
      gap: 20px;
    }

    .header-action {
      position: relative;
      cursor: pointer;
      color: var(--dark);
      font-size: 18px;
    }

    .notification-badge {
      position: absolute;
      top: -5px;
      right: -5px;
      background: var(--danger);
      color: white;
      width: 18px;
      height: 18px;
      border-radius: 50%;
      display: flex;
      align-items: center;
      justify-content: center;
      font-size: 10px;
      font-weight: bold;
    }

    .user-profile {
      display: flex;
      align-items: center;
      cursor: pointer;
    }

    .user-profile img {
      width: 36px;
      height: 36px;
      border-radius: 50%;
      margin-right: 10px;
      object-fit: cover;
    }

    .content {
      flex: 1;
      padding: 24px;
      overflow-y: auto;
    }

    .page-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 24px;
    }

    .page-title {
      font-size: 24px;
      font-weight: 600;
      color: var(--dark);
    }

    .breadcrumb {
      display: flex;
      align-items: center;
      color: var(--gray);
      font-size: 14px;
    }

    .breadcrumb a {
      color: var(--primary);
      text-decoration: none;
    }

    .breadcrumb i {
      margin: 0 8px;
      font-size: 12px;
    }

    .content-section {
      background: white;
      border-radius: var(--border-radius);
      padding: 24px;
      margin-bottom: 24px;
      box-shadow: 0 4px 10px rgba(0, 0, 0, 0.05);
    }

    .section-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 20px;
    }

    .section-title {
      font-size: 18px;
      font-weight: 600;
    }

    .section-action {
      color: var(--primary);
      text-decoration: none;
      font-size: 14px;
      display: flex;
      align-items: center;
    }

    .section-action i {
      margin-left: 6px;
      font-size: 12px;
    }

    .form-group {
      margin-bottom: 20px;
    }

    .form-label {
      display: block;
      margin-bottom: 8px;
      font-weight: 500;
      font-size: 14px;
    }

    .form-input,
    .form-textarea,
    .form-select {
      width: 100%;
      padding: 12px 16px;
      border: 1px solid #e2e8f0;
      border-radius: 8px;
      font-size: 14px;
      transition: var(--transition);
    }

    .form-textarea {
      min-height: 120px;
      resize: vertical;
    }

    .form-input:focus,
    .form-textarea:focus,
    .form-select:focus {
      border-color: var(--primary);
      box-shadow: 0 0 0 3px rgba(67, 97, 238, 0.15);
      outline: none;
    }

    .btn {
      padding: 8px 12px;
      border-radius: 6px;
      font-size: 13px;
      font-weight: 500;
      cursor: pointer;
      border: none;
      transition: var(--transition);
    }

    .btn-primary {
      background: var(--primary);
      color: white;
    }

    .btn-primary:hover {
      background: var(--primary-dark);
    }

    .btn-danger {
      background: var(--danger);
      color: white;
    }

    .btn-danger:hover {
      background: #d93757;
    }

    .btn-sm {
      padding: 6px 10px;
      font-size: 12px;
    }

    .data-table {
      width: 100%;
      border-collapse: collapse;
    }

    .data-table th {
      text-align: left;
      padding: 12px 16px;
      background: #f8fafc;
      color: var(--gray);
      font-weight: 500;
      font-size: 14px;
    }

    .data-table td {
      padding: 16px;
      border-top: 1px solid #e2e8f0;
      font-size: 14px;
    }

    .data-table tr:hover {
      background: #f8fafc;
    }

    .table-actions {
      display: flex;
      gap: 8px;
    }

    .dashboard-footer {
      background: white;
      padding: 16px 24px;
      text-align: center;
      color: var(--gray);
      font-size: 14px;
      border-top: 1px solid #e2e8f0;
    }

    .modal-overlay {
      position: fixed;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background: rgba(0, 0, 0, 0.5);
      display: flex;
      align-items: center;
      justify-content: center;
      z-index: 2000;
      opacity: 0;
      visibility: hidden;
      transition: var(--transition);
    }

    .modal-overlay.active {
      opacity: 1;
      visibility: visible;
    }

    .modal {
      background: white;
      border-radius: var(--border-radius);
      width: 90%;
      max-width: 600px;
      box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
      transform: translateY(-20px);
      transition: var(--transition);
      overflow: hidden;
    }

    .modal-sm {
      max-width: 400px;
    }

    .modal-overlay.active .modal {
      transform: translateY(0);
    }

    .modal-header {
      padding: 20px 24px;
      border-bottom: 1px solid #e2e8f0;
      display: flex;
      align-items: center;
      justify-content: space-between;
    }

    .modal-title {
      font-size: 18px;
      font-weight: 600;
    }

    .modal-close {
      background: none;
      border: none;
      font-size: 20px;
      cursor: pointer;
      color: var(--gray);
    }

    .modal-body {
      padding: 24px;
    }

    .modal-footer {
      padding: 16px 24px;
      border-top: 1px solid #e2e8f0;
      display: flex;
      justify-content: flex-end;
      gap: 12px;
    }

    .gallery-grid {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
      gap: 16px;
    }

    .gallery-item {
      position: relative;
      aspect-ratio: 1 / 1;
      overflow: hidden;
      border-radius: 8px;
      box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    }

    .gallery-item img {
      width: 100%;
      height: 100%;
      object-fit: cover;
      transition: transform 0.3s ease;
    }

    .gallery-item:hover img {
      transform: scale(1.05);
    }

    .gallery-delete {
      position: absolute;
      top: 8px;
      right: 8px;
      background: rgba(239, 71, 111, 0.8);
      color: white;
      border: none;
      width: 30px;
      height: 30px;
      border-radius: 50%;
      display: flex;
      align-items: center;
      justify-content: center;
      cursor: pointer;
      opacity: 0;
      transition: opacity 0.3s ease;
    }

    .gallery-item:hover .gallery-delete {
      opacity: 1;
    }

    @media (max-width: 992px) {
      .sidebar {
        transform: translateX(-100%);
        position: fixed;
        height: 100%;
      }

      .sidebar.active {
        transform: translateX(0);
      }

      .search-box input {
        width: 200px;
      }
    }

    @media (max-width: 768px) {
      .search-box {
        display: none;
      }

      .header {
        padding: 0 16px;
      }

      .content {
        padding: 16px;
      }
    }
  </style>

  <!-- Add these in your HTML layout (head or before closing body tag) -->
  <!-- Bootstrap 5 -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
  <!-- /<script src="https://cdn.ckeditor.com/ckeditor5/39.0.1/classic/ckeditor.js"></script> -->

</head>

<body>

  <div class="sidebar">
    <div class="sidebar-header">
      <img src="<%= logo %>" alt="Logo">





      <h2>VidyaVedika Admin</h2>
    </div>


    <div class="sidebar-menu">
      <div class="menu-label">Main</div>
      <a href="/admin/dashboard" class="menu-item active">
        <i class="fas fa-home"></i>
        <span>Dashboard</span>
      </a>

      <a href="/admin/home" class="menu-item">
        <i class="fas fa-house-user"></i>
        <span>Home</span>
      </a>

      <div class="menu-label">Content</div>
      <a href="/admin/about-us" class="menu-item">
        <i class="fas fa-info-circle"></i>
        <span>About Us</span>
      </a>
      <a href="/admin/academics" class="menu-item">
        <i class="fas fa-book-open"></i>
        <span>Academics</span>
      </a>
      <a href="/admin/course" class="menu-item">
        <i class="fas fa-graduation-cap"></i>
        <span>Courses</span>
      </a>
      <a href="/admin/student-life" class="menu-item">
        <i class="fas fa-users"></i>
        <span>Student Life</span>
      </a>

    </div>


    <!-- <div class="sidebar-footer">
            <div class="user-info">
                <img src="https://placehold.co/40x40" alt="User">
                <div class="user-details">
                    <h4>Admin User</h4>
                    <span>Content Manager</span>
                </div>
            </div>
        </div> -->
  </div>

  <!-- Main Content -->
  <div class="main-content">
    <!-- Header -->
    <div class="header">
      <div class="header-left">


      </div>

      <div class="header-right">
        <div class="user-profile" id="userProfileBtn">
          <img src="<%= logo %>" alt="User">
          <button id="userProfileBtn" class="btn">Admin User</button>

        </div>
      </div>
    </div>
    <div class="content">
      <div class="page-header">
        <h1 class="page-title">course Page Management</h1>
        <div class="breadcrumb">
          <a href="#">Home</a>
          <i class="fas fa-chevron-right"></i>
          <span>Home Page</span>
        </div>
      </div>

      <div class="content-section">
        <div class="section-header">
          <h2 class="section-title">Course Section</h2>
        </div>

        <form action="/admin/course/save" method="POST">

          <div class="form-group">
            <label for="courseHeading" class="form-label">Main Heading</label>
            <input type="text" class="form-input" id="courseHeading" name="main_heading"
              value="<%= section.main_heading || '' %>" required>
          </div>

          <div class="form-group">
            <label for="courseDescription" class="form-label">Main Description</label>
            <textarea class="form-textarea" id="courseDescription" name="main_description"
              rows="5"><%= section.main_description || '' %></textarea>
          </div>

          <div class="form-footer">
            <button type="submit" class="btn btn-primary">Save Section</button>
          </div>

        </form>
      </div>


      <!-- Courses Section -->
      <div class="container">
        <div class="content-section">
          <div class="section-header d-flex justify-content-between align-items-center">
            <h2 class="section-title">Courses</h2>
            <button type="button" class="btn btn-primary" onclick="openCourseModal('add')">
              Add New Course
            </button>
          </div>

          <div class="table-responsive">
            <table class="data-table table table-bordered">
              <thead>
                <tr>
                  <th>Image</th>
                  <th>Heading</th>
                  <th>Description</th>
                  <th>Actions</th>
                </tr>
              </thead>
              <tbody>
                <% if (courses && courses.length> 0) { %>
                  <% courses.forEach(course=> { %>
                    <tr>
                      <td>
                        <% if (course.image) { %>
                          <img src="<%= course.image %>" width="80">
                          <% } else { %>
                            <span class="text-muted">N/A</span>
                            <% } %>
                      </td>
                      <td>
                        <%= course.heading %>
                      </td>
                      <td>
                        <%= course.description %>
                      </td>
                      <td>
                        <button class="btn btn-sm btn-primary" data-id="<%= course.id %>"
                          data-heading="<%- course.heading %>" data-description="<%- course.description %>"
                          data-image="<%= course.image || '' %>" onclick="openCourseModal('edit', this)">
                          Edit
                        </button>
                        <form action="/admin/course/delete/<%= course.id %>" method="POST" style="display:inline;">
                          <button type="submit" class="btn btn-sm btn-danger" onclick="return confirm('Are you sure?')">
                            Delete
                          </button>
                        </form>
                      </td>
                    </tr>
                    <% }) %>
                      <% } else { %>
                        <tr>
                          <td colspan="4" class="text-center">No courses available.</td>
                        </tr>
                        <% } %>
              </tbody>
            </table>
          </div>
        </div>
      </div>

      <!-- Course Modal -->
      <div class="modal fade" id="courseModal" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered modal-md">
          <div class="modal-content shadow-lg rounded-3 border-0">
            <form id="courseForm" method="POST" enctype="multipart/form-data">
              <div class="modal-header bg-primary text-white">
                <h5 class="modal-title" id="courseModalTitle">Add Course</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
              </div>

              <div class="modal-body">
                <div class="mb-3">
                  <label for="modalCourseHeading" class="form-label">Course Heading</label>
                  <input type="text" class="form-control" id="modalCourseHeading" name="heading" required>
                </div>

                <div class="mb-3">
                  <label for="modalCourseDescription" class="form-label">Course Description</label>
                  <textarea class="form-control" id="modalCourseDescription" name="description" rows="5"
                    required></textarea>
                </div>

                <div class="mb-3">
                  <label for="modalCourseImage" class="form-label">Upload Image</label>
                  <input type="file" class="form-control" id="modalCourseImage" name="image">
                  <div id="modalCourseImagePreview" class="mt-2"></div>
                </div>
              </div>

              <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="submit" id="courseModalSubmit" class="btn btn-primary">Save</button>
              </div>
            </form>
          </div>
        </div>
      </div>

      <!-- JS for Course Modal -->
      <script>
        function openCourseModal(action, el = null) {
          const modalTitle = document.getElementById("courseModalTitle");
          const form = document.getElementById("courseForm");
          const preview = document.getElementById("modalCourseImagePreview");
          const submitBtn = document.getElementById("courseModalSubmit");

          // reset
          document.getElementById("modalCourseHeading").value = "";
          document.getElementById("modalCourseDescription").value = "";
          document.getElementById("modalCourseImage").value = "";
          preview.innerHTML = "";

          if (action === "add") {
            modalTitle.innerText = "Add Course";
            form.action = "/admin/course/add";
            submitBtn.innerText = "Add Course";
          } else {
            modalTitle.innerText = "Edit Course";
            form.action = "/admin/course/edit/" + el.dataset.id;
            submitBtn.innerText = "Save Changes";

            document.getElementById("modalCourseHeading").value = el.dataset.heading;
            document.getElementById("modalCourseDescription").value = el.dataset.description;

            if (el.dataset.image) {
              preview.innerHTML = `<img src="${el.dataset.image}" class="img-thumbnail mt-2" width="100">`;
            }
          }

          new bootstrap.Modal(document.getElementById("courseModal")).show();
        }
      </script>

      <!-- ================== COURSE VIEWS (Replace this entire section) ================== -->
      <div class="container">
        <div class="content-section">
          <div class="section-header d-flex justify-content-between align-items-center">
            <h2 class="section-title">Course Details / View</h2>
            <button type="button" class="btn btn-primary" onclick="openCourseViewModal('add')">
              Add / Edit Course View
            </button>
          </div>

          <div class="table-responsive">
            <table class="data-table table table-bordered">
              <thead>
                <tr>
                  <th>Course</th>
                  <th>Banner Image</th>
                  <th>Actions</th>
                </tr>
              </thead>
              <tbody>
                <% if (courseViews && courseViews.length> 0) { %>
                  <% courseViews.forEach(cv=> { %>
                    <tr>
                      <td>
                        <%= cv.course_heading %>
                      </td>
                      <td>
                        <% if (cv.banner_image) { %>
                          <img src="<%= cv.banner_image %>" width="80" alt="banner">
                          <% } else { %>
                            <span class="text-muted">N/A</span>
                            <% } %>
                      </td>
                      <td>
                        <!-- use data-* attrs to avoid escaping issues -->
                        <button class="btn btn-sm btn-primary" data-id="<%= cv.id %>" data-course="<%= cv.course_id %>"
                          data-banner="<%= cv.banner_image || '' %>"
                          data-content="<%- encodeURIComponent(cv.content || '') %>"
                          onclick="openCourseViewModal('edit', this)">
                          Edit
                        </button>

                        <form action="/admin/course/view/delete/<%= cv.id %>" method="POST" style="display:inline;">
                          <button type="submit" class="btn btn-sm btn-danger" onclick="return confirm('Are you sure?')">
                            Delete
                          </button>
                        </form>
                      </td>
                    </tr>
                    <% }) %>
                      <% } else { %>
                        <tr>
                          <td colspan="3" class="text-center">No course views found.</td>
                        </tr>
                        <% } %>
              </tbody>
            </table>
          </div>
        </div>
      </div>

      <!-- Course View Modal -->
      <div class="modal fade" id="courseViewModal" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered modal-lg">
          <div class="modal-content shadow-lg rounded-3 border-0">
            <form id="courseViewForm" method="POST" enctype="multipart/form-data">
              <input type="hidden" id="existingBanner" name="existing_banner" value="">
              <div class="modal-header bg-primary text-white">
                <h5 class="modal-title" id="courseViewModalTitle">Add / Edit Course View</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
              </div>

              <div class="modal-body">
                <div class="mb-3">
                  <label for="courseSelect" class="form-label">Select Course</label>
                  <select id="courseSelect" name="course_id" class="form-control" required>
                    <% courses.forEach(course=> { %>
                      <option value="<%= course.id %>">
                        <%= course.heading %>
                      </option>
                      <% }) %>
                  </select>
                </div>

                <div class="mb-3">
                  <label for="courseBannerImage" class="form-label">Banner Image</label>
                  <input type="file" class="form-control" id="courseBannerImage" name="banner_image" accept="image/*">
                  <div id="courseBannerImagePreview" class="mt-2"></div>
                </div>

                <div class="mb-3">
                  <label for="courseContent" class="form-label">Course Content (CKEditor)</label>
                  <!-- remove 'required' attribute if you prefer server-side validation;
                 we do client-side validation below after syncing editor content -->
                  <textarea class="form-control" id="courseContent" name="content" rows="10"></textarea>
                </div>
              </div>

              <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="submit" id="courseViewSubmit" class="btn btn-primary">Save</button>
              </div>
            </form>
          </div>
        </div>
      </div>

      <!-- ensure CKEditor script is present once on the page -->
      <script src="https://cdn.ckeditor.com/ckeditor5/39.0.1/classic/ckeditor.js"></script>

      <script>
        let courseEditor = null;
        let pendingCourseContent = null; // used when editor not ready at time of opening modal

        // create editor and apply a pending value if present
        function initCourseEditor() {
          if (courseEditor) return;
          const el = document.querySelector('#courseContent');
          if (!el) return;
          ClassicEditor.create(el, {
            toolbar: [
              'heading', '|',
              'bold', 'italic', 'underline', 'strikethrough', '|',
              'fontColor', 'fontBackgroundColor', '|',
              'link', 'bulletedList', 'numberedList', '|',
              'blockQuote', 'insertTable', '|',
              'undo', 'redo'
            ]
          })
            .then(editor => {
              courseEditor = editor;
              if (pendingCourseContent) {
                editor.setData(pendingCourseContent);
                // also make sure textarea (fallback) is set
                document.getElementById('courseContent').value = pendingCourseContent;
                pendingCourseContent = null;
              }
            })
            .catch(err => {
              console.error('CKEditor init error:', err);
            });
        }

        document.addEventListener('DOMContentLoaded', function () {
          initCourseEditor();

          // Image preview
          document.getElementById('courseBannerImage').addEventListener('change', function () {
            const file = this.files[0];
            const preview = document.getElementById('courseBannerImagePreview');
            preview.innerHTML = '';
            if (file) {
              const reader = new FileReader();
              reader.onload = e => {
                preview.innerHTML = `<img src="${e.target.result}" class="img-thumbnail mt-2" width="150">`;
              };
              reader.readAsDataURL(file);
            }
          });

          // Ensure editor content is synced before native form submit
          document.getElementById('courseViewForm').addEventListener('submit', function (e) {
            // sync content
            syncEditorContent();

            // Simple validation: make sure course_id exists and content not empty
            const courseSelect = document.getElementById('courseSelect');
            const contentValue = document.getElementById('courseContent').value || '';

            if (!courseSelect.value) {
              e.preventDefault();
              alert('Please select a course.');
              return;
            }

            // if you want content to be required, enforce here:
            // if (contentValue.trim().length === 0) { e.preventDefault(); alert('Please add course content.'); return; }

            // allow normal submit to proceed (multipart/form-data)
          });
        });

        // sync CKEditor data to textarea with fallbacks
        function syncEditorContent() {
          const textarea = document.getElementById('courseContent');

          // primary: CKEditor API
          if (courseEditor && typeof courseEditor.getData === 'function') {
            textarea.value = courseEditor.getData();
            return;
          }

          // fallback: if CKEditor not ready, try to read editable DOM inside modal
          const editable = document.querySelector('#courseViewModal .ck-editor__editable') || document.querySelector('.ck-editor__editable');
          if (editable) {
            textarea.value = editable.innerHTML;
            return;
          }

          // final fallback: leave textarea as-is (maybe user edited the original textarea)
        }

        // action: 'add' or 'edit'; el is either null (for add) or the button element (for edit)
        function openCourseViewModal(action, el = null) {
          const modalTitle = document.getElementById('courseViewModalTitle');
          const form = document.getElementById('courseViewForm');
          const preview = document.getElementById('courseBannerImagePreview');
          const submitBtn = document.getElementById('courseViewSubmit');
          const selectCourse = document.getElementById('courseSelect');
          const existingBanner = document.getElementById('existingBanner');

          // don't use form.reset() (can clear things unexpectedly). Clear fields manually:
          selectCourse.selectedIndex = 0;
          document.getElementById('courseBannerImage').value = '';
          preview.innerHTML = '';
          document.getElementById('courseContent').value = '';
          existingBanner.value = '';

          // ensure editor is initialized (or will be shortly)
          initCourseEditor();

          if (action === 'add') {
            modalTitle.innerText = 'Add Course View';
            form.action = '/admin/course/view/add';
            submitBtn.innerText = 'Add';
            // editor cleared already above
            pendingCourseContent = null;
          } else {
            // edit mode: el is the clicked button
            modalTitle.innerText = 'Edit Course View';
            const id = el.dataset.id;
            form.action = '/admin/course/view/edit/' + id;
            submitBtn.innerText = 'Save';

            // restore select
            if (el.dataset.course) selectCourse.value = el.dataset.course;

            // banner preview & hidden existingBanner
            if (el.dataset.banner) {
              preview.innerHTML = `<img src="${el.dataset.banner}" class="img-thumbnail mt-2" width="150">`;
              existingBanner.value = el.dataset.banner;
            }

            // content: decode and set into editor if ready, otherwise store pending
            let decodedContent = '';
            try {
              decodedContent = decodeURIComponent(el.dataset.content || '');
            } catch (err) {
              // if decode fails, fallback to raw value
              decodedContent = el.dataset.content || '';
            }

            // set both pending and textarea fallback
            if (courseEditor && typeof courseEditor.setData === 'function') {
              courseEditor.setData(decodedContent);
              document.getElementById('courseContent').value = decodedContent;
            } else {
              pendingCourseContent = decodedContent;
              document.getElementById('courseContent').value = decodedContent;
            }
          }

          new bootstrap.Modal(document.getElementById('courseViewModal')).show();
        }
      </script>

      <footer class="dashboard-footer">
        <p>&copy; 2023 VidyaVedika Institute. All rights reserved.</p>
      </footer>

      <div class="modal-overlay" id="credentialsModal">
        <div class="modal">
          <div class="modal-header">
            <h2 class="modal-title">Change Admin Credentials</h2>
            <button class="modal-close" id="closeCredentialsModal">&times;</button>
          </div>
          <div class="modal-body">
            <div id="credentialsMessage" style="display: none;" class="alert"></div>

            <form id="changeCredentialsForm">
              <div class="form-group">
                <label for="newUsername">Username</label>
                <input type="text" id="newUsername" name="newUsername" placeholder="Enter new username" required>
              </div>

              <div class="form-group">
                <label for="currentPassword">Current Password</label>
                <input type="password" id="currentPassword" name="currentPassword" placeholder="Enter current password"
                  required>
              </div>

              <div class="form-group">
                <label for="newPassword">New Password</label>
                <input type="password" id="newPassword" name="newPassword" placeholder="Enter new password" required>
              </div>

              <div class="form-group">
                <label for="confirmNewPassword">Confirm New Password</label>
                <input type="password" id="confirmNewPassword" name="confirmNewPassword"
                  placeholder="Confirm new password" required>
              </div>

              <div class="modal-footer">
                <button type="button" class="btn btn-cancel" id="cancelCredentialsChange">Cancel</button>
                <button type="submit" class="btn btn-primary">Update Credentials</button>
              </div>
            </form>
          </div>
        </div>
      </div>

      <style>
        /* Modal overlay */
        .modal-overlay {
          position: fixed;
          top: 0;
          left: 0;
          width: 100%;
          height: 100%;
          background-color: rgba(0, 0, 0, 0.5);
          display: none;
          justify-content: center;
          align-items: center;
          z-index: 9999;
        }

        /* Show modal */
        .modal-overlay.active {
          display: flex;
        }

        /* Modal box */
        .modal {
          background-color: #fff;
          width: 400px;
          max-width: 90%;
          border-radius: 12px;
          box-shadow: 0 8px 20px rgba(0, 0, 0, 0.3);
          overflow: hidden;
          animation: fadeIn 0.3s ease;
        }

        /* Header */
        .modal-header {
          padding: 16px 24px;
          background-color: #4A90E2;
          color: #fff;
          display: flex;
          justify-content: space-between;
          align-items: center;
        }

        .modal-header .modal-title {
          margin: 0;
          font-size: 1.25rem;
        }

        .modal-close {
          background: none;
          border: none;
          color: #fff;
          font-size: 1.5rem;
          cursor: pointer;
        }

        /* Body */
        .modal-body {
          padding: 20px 24px;
        }

        /* Form groups */
        .form-group {
          margin-bottom: 16px;
          display: flex;
          flex-direction: column;
        }

        .form-group label {
          font-weight: 500;
          margin-bottom: 6px;
          color: #333;
        }

        .form-group input {
          padding: 10px 12px;
          border: 1px solid #ccc;
          border-radius: 6px;
          font-size: 1rem;
          transition: all 0.2s;
        }

        .form-group input:focus {
          border-color: #4A90E2;
          outline: none;
          box-shadow: 0 0 4px rgba(74, 144, 226, 0.4);
        }

        /* Footer buttons */
        .modal-footer {
          display: flex;
          justify-content: flex-end;
          gap: 10px;
          margin-top: 10px;
        }

        .btn {
          padding: 10px 18px;
          border-radius: 6px;
          border: none;
          font-size: 1rem;
          cursor: pointer;
          transition: all 0.2s;
        }

        .btn-primary {
          background-color: #4A90E2;
          color: #fff;
        }

        .btn-primary:hover {
          background-color: #357ABD;
        }

        .btn-cancel {
          background-color: #f0f0f0;
          color: #333;
        }

        .btn-cancel:hover {
          background-color: #ddd;
        }

        /* Alerts */
        .alert {
          padding: 10px 12px;
          border-radius: 6px;
          margin-bottom: 12px;
          font-size: 0.95rem;
        }

        .alert-danger {
          background-color: #f8d7da;
          color: #842029;
        }

        .alert-success {
          background-color: #d1e7dd;
          color: #0f5132;
        }

        /* Animations */
        @keyframes fadeIn {
          from {
            opacity: 0;
            transform: translateY(-20px);
          }

          to {
            opacity: 1;
            transform: translateY(0);
          }
        }
      </style>

      <script>
        document.addEventListener('DOMContentLoaded', function () {
          const credentialsModal = document.getElementById('credentialsModal');
          const userProfileBtn = document.getElementById('userProfileBtn');
          const closeCredentialsModal = document.getElementById('closeCredentialsModal');
          const cancelCredentialsChange = document.getElementById('cancelCredentialsChange');
          const credentialsMessage = document.getElementById('credentialsMessage');
          const changeCredentialsForm = document.getElementById('changeCredentialsForm');

          // Open modal
          userProfileBtn.addEventListener('click', () => {
            credentialsModal.classList.add('active');
            document.body.style.overflow = 'hidden';
          });


          // Close modal
          function closeModal() {
            if (!credentialsModal) return;
            credentialsModal.classList.remove('active');
            document.body.style.overflow = '';
            if (credentialsMessage) credentialsMessage.style.display = 'none';
            if (document.getElementById('currentPassword')) document.getElementById('currentPassword').value = '';
            if (document.getElementById('newPassword')) document.getElementById('newPassword').value = '';
            if (document.getElementById('confirmNewPassword')) document.getElementById('confirmNewPassword').value = '';
          }

          if (closeCredentialsModal) closeCredentialsModal.addEventListener('click', closeModal);
          if (cancelCredentialsChange) cancelCredentialsChange.addEventListener('click', closeModal);

          // Close modal when clicking outside modal content
          if (credentialsModal) {
            credentialsModal.addEventListener('click', function (e) {
              if (e.target === credentialsModal) closeModal();
            });
          }

          // AJAX form submit
          if (changeCredentialsForm) {
            changeCredentialsForm.addEventListener('submit', async function (e) {
              e.preventDefault();

              const newUsername = document.getElementById('newUsername').value;
              const currentPassword = document.getElementById('currentPassword').value;
              const newPassword = document.getElementById('newPassword').value;
              const confirmPassword = document.getElementById('confirmNewPassword').value;

              if (newPassword !== confirmPassword) {
                credentialsMessage.textContent = 'New passwords do not match!';
                credentialsMessage.className = 'alert alert-danger';
                credentialsMessage.style.display = 'block';
                return;
              }

              try {
                const response = await fetch('/admin/change-credentials', {
                  method: 'POST',
                  headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
                  body: new URLSearchParams({
                    newUsername,
                    currentPassword,
                    newPassword,
                    confirmNewPassword: confirmPassword
                  })
                });

                const result = await response.json();

                if (result.success) {
                  credentialsMessage.textContent = result.message;
                  credentialsMessage.className = 'alert alert-success';
                  credentialsMessage.style.display = 'block';

                  // Redirect to dashboard after short delay
                  setTimeout(() => {
                    window.location.href = '/admin/dashboard';
                  }, 1500);
                } else if (result.error) {
                  credentialsMessage.textContent = result.error;
                  credentialsMessage.className = 'alert alert-danger';
                  credentialsMessage.style.display = 'block';
                }
              } catch (err) {
                credentialsMessage.textContent = 'Server error. Try again.';
                credentialsMessage.className = 'alert alert-danger';
                credentialsMessage.style.display = 'block';
                console.error(err);
              }
            });
          }
        });
      </script>
</body>

</html>